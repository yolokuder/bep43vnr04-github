{"version":3,"file":"component---src-pages-products-index-tsx-f8eaa1d166248ed68060.js","mappings":"oRAoFA,UAlBwD,WACtD,OAnCaA,EAAAA,EAAAA,gBAAe,cAmCpBC,EAAR,EAAQA,kBACFC,GADN,EAA2BC,KACbF,EAAkBG,OAChC,OACE,2BACGF,EAAMG,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNC,EAAQD,EAAKE,YAAYD,OAASD,EAAKG,OAAOC,KAEpD,OACE,uBAAKC,IAAKL,EAAKG,OAAOC,MACpB,gBAAC,KAAD,CAAME,GAAIN,EAAKG,OAAOC,MAAOH","sources":["webpack://yolokuder-gatsby-typescript-jumpstart/./src/pages/products/index.tsx"],"sourcesContent":["import React from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { Link } from \"@yolo-ui\"\n\ninterface PageTemplateProps {\n  site: {\n    siteMetadata: {\n      description: string\n      title: string\n    }\n  }\n  allMarkdownRemark: {\n    totalCount: number\n    edges: Array<{\n      node: {\n        id: string\n        frontmatter: {\n          title: string\n          date: string\n          description: string\n          imageTitle: string\n        }\n        fields: {\n          slug: string\n        }\n        excerpt: string\n      }\n    }>\n  }\n}\n\nconst useAllMarkdownRemark = (): PageTemplateProps => {\n  const data = useStaticQuery(graphql`\n    query ($type: String = \"products\") {\n      site {\n        siteMetadata {\n          title\n          description\n        }\n      }\n      allMarkdownRemark(\n        sort: { fields: [frontmatter___date], order: DESC }\n        filter: { fields: { type: { eq: $type } } }\n      ) {\n        totalCount\n        edges {\n          node {\n            id\n            frontmatter {\n              title\n              date(formatString: \"DD MMMM, YYYY\")\n              description\n              imageTitle\n            }\n            fields {\n              slug\n            }\n            excerpt\n          }\n        }\n      }\n    }\n  `)\n  return data\n}\n\nconst BlogsPage: React.FCWithRoute<PageTemplateProps> = () => {\n  const { allMarkdownRemark, site } = useAllMarkdownRemark()\n  const posts = allMarkdownRemark.edges\n  return (\n    <div>\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n\n        return (\n          <div key={node.fields.slug}>\n            <Link to={node.fields.slug}>{title}</Link>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default BlogsPage\n"],"names":["useStaticQuery","allMarkdownRemark","posts","site","edges","map","node","title","frontmatter","fields","slug","key","to"],"sourceRoot":""}